# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'src/ui/main_window.ui'
#
# Created by: PyQt5 UI code generator 5.7
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1017, 657)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/newPrefix/icons/window_icons/relanotes-logo2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setSpacing(0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.stackedWidget = QtWidgets.QStackedWidget(self.centralwidget)
        self.stackedWidget.setObjectName("stackedWidget")
        self.notelist = QtWidgets.QWidget()
        self.notelist.setObjectName("notelist")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.notelist)
        self.verticalLayout_6.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_6.setSpacing(0)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.frameNotelist_Filter = QtWidgets.QFrame(self.notelist)
        self.frameNotelist_Filter.setMinimumSize(QtCore.QSize(0, 0))
        self.frameNotelist_Filter.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameNotelist_Filter.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frameNotelist_Filter.setObjectName("frameNotelist_Filter")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.frameNotelist_Filter)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_6.setSpacing(5)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.label_2 = QtWidgets.QLabel(self.frameNotelist_Filter)
        font = QtGui.QFont()
        font.setPointSize(13)
        font.setBold(True)
        font.setWeight(75)
        self.label_2.setFont(font)
        self.label_2.setObjectName("label_2")
        self.horizontalLayout_6.addWidget(self.label_2)
        self.lineNotelist_Filter = QtWidgets.QLineEdit(self.frameNotelist_Filter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lineNotelist_Filter.sizePolicy().hasHeightForWidth())
        self.lineNotelist_Filter.setSizePolicy(sizePolicy)
        self.lineNotelist_Filter.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.lineNotelist_Filter.setAutoFillBackground(True)
        self.lineNotelist_Filter.setObjectName("lineNotelist_Filter")
        self.horizontalLayout_6.addWidget(self.lineNotelist_Filter)
        self.widget = QtWidgets.QWidget(self.frameNotelist_Filter)
        self.widget.setMinimumSize(QtCore.QSize(40, 0))
        self.widget.setObjectName("widget")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_4.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_4.setSpacing(3)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.labelNotelistFilterTip = QtWidgets.QLabel(self.widget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.labelNotelistFilterTip.sizePolicy().hasHeightForWidth())
        self.labelNotelistFilterTip.setSizePolicy(sizePolicy)
        self.labelNotelistFilterTip.setWordWrap(False)
        self.labelNotelistFilterTip.setObjectName("labelNotelistFilterTip")
        self.verticalLayout_4.addWidget(self.labelNotelistFilterTip)
        self.label_DisplayFilters = QtWidgets.QLabel(self.widget)
        self.label_DisplayFilters.setObjectName("label_DisplayFilters")
        self.verticalLayout_4.addWidget(self.label_DisplayFilters)
        self.horizontalLayout_6.addWidget(self.widget)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem1)
        self.label_6 = QtWidgets.QLabel(self.frameNotelist_Filter)
        self.label_6.setObjectName("label_6")
        self.horizontalLayout_6.addWidget(self.label_6)
        self.lineEdit_Filter_Note_Text = QtWidgets.QLineEdit(self.frameNotelist_Filter)
        self.lineEdit_Filter_Note_Text.setAutoFillBackground(False)
        self.lineEdit_Filter_Note_Text.setObjectName("lineEdit_Filter_Note_Text")
        self.horizontalLayout_6.addWidget(self.lineEdit_Filter_Note_Text)
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_6.addItem(spacerItem2)
        self.verticalLayout_3.addLayout(self.horizontalLayout_6)
        self.verticalLayout_6.addWidget(self.frameNotelist_Filter)
        self.textBrowser_Listnotes = QtWidgets.QTextBrowser(self.notelist)
        self.textBrowser_Listnotes.setOpenExternalLinks(False)
        self.textBrowser_Listnotes.setOpenLinks(False)
        self.textBrowser_Listnotes.setObjectName("textBrowser_Listnotes")
        self.verticalLayout_6.addWidget(self.textBrowser_Listnotes)
        self.stackedWidget.addWidget(self.notelist)
        self.note = QtWidgets.QWidget()
        self.note.setObjectName("note")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.note)
        self.verticalLayout_9.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_9.setSpacing(0)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.widget_note = QtWidgets.QWidget(self.note)
        self.widget_note.setObjectName("widget_note")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.widget_note)
        self.verticalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_5.setSpacing(0)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.horizontalLayout_Note = QtWidgets.QHBoxLayout()
        self.horizontalLayout_Note.setSpacing(0)
        self.horizontalLayout_Note.setObjectName("horizontalLayout_Note")
        self.textBrowser_Note = QtWidgets.QTextBrowser(self.widget_note)
        self.textBrowser_Note.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.IBeamCursor))
        self.textBrowser_Note.setMouseTracking(True)
        self.textBrowser_Note.setAutoFillBackground(False)
        self.textBrowser_Note.setStyleSheet("")
        self.textBrowser_Note.setReadOnly(False)
        self.textBrowser_Note.setTextInteractionFlags(QtCore.Qt.LinksAccessibleByKeyboard|QtCore.Qt.LinksAccessibleByMouse|QtCore.Qt.TextBrowserInteraction|QtCore.Qt.TextEditable|QtCore.Qt.TextEditorInteraction|QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.textBrowser_Note.setOpenExternalLinks(True)
        self.textBrowser_Note.setOpenLinks(True)
        self.textBrowser_Note.setObjectName("textBrowser_Note")
        self.horizontalLayout_Note.addWidget(self.textBrowser_Note)
        self.frame_NoteMinimap = QtWidgets.QFrame(self.widget_note)
        self.frame_NoteMinimap.setMinimumSize(QtCore.QSize(32, 0))
        self.frame_NoteMinimap.setLayoutDirection(QtCore.Qt.RightToLeft)
        self.frame_NoteMinimap.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.frame_NoteMinimap.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_NoteMinimap.setObjectName("frame_NoteMinimap")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_NoteMinimap)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setSpacing(0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.widget_toolbar = QtWidgets.QWidget(self.frame_NoteMinimap)
        self.widget_toolbar.setAutoFillBackground(False)
        self.widget_toolbar.setObjectName("widget_toolbar")
        self.horizontalLayout.addWidget(self.widget_toolbar)
        self.widget_minimap = QtWidgets.QWidget(self.frame_NoteMinimap)
        self.widget_minimap.setMinimumSize(QtCore.QSize(5, 0))
        self.widget_minimap.setObjectName("widget_minimap")
        self.horizontalLayout.addWidget(self.widget_minimap)
        self.horizontalLayout_Note.addWidget(self.frame_NoteMinimap)
        self.verticalLayout_5.addLayout(self.horizontalLayout_Note)
        self.frameSearchInNote = QtWidgets.QFrame(self.widget_note)
        self.frameSearchInNote.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameSearchInNote.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameSearchInNote.setObjectName("frameSearchInNote")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frameSearchInNote)
        self.horizontalLayout_3.setContentsMargins(5, 5, 5, 5)
        self.horizontalLayout_3.setSpacing(5)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.label_3 = QtWidgets.QLabel(self.frameSearchInNote)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_3.setFont(font)
        self.label_3.setObjectName("label_3")
        self.horizontalLayout_3.addWidget(self.label_3)
        self.lineTextToFind = QtWidgets.QLineEdit(self.frameSearchInNote)
        self.lineTextToFind.setAutoFillBackground(True)
        self.lineTextToFind.setObjectName("lineTextToFind")
        self.horizontalLayout_3.addWidget(self.lineTextToFind)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem3)
        spacerItem4 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem4)
        spacerItem5 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem5)
        spacerItem6 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_3.addItem(spacerItem6)
        self.verticalLayout_5.addWidget(self.frameSearchInNote)
        self.verticalLayout_9.addWidget(self.widget_note)
        self.plainTextEdit_Note_Ntml_Source = QtWidgets.QPlainTextEdit(self.note)
        self.plainTextEdit_Note_Ntml_Source.setMaximumSize(QtCore.QSize(16777215, 80))
        self.plainTextEdit_Note_Ntml_Source.setObjectName("plainTextEdit_Note_Ntml_Source")
        self.verticalLayout_9.addWidget(self.plainTextEdit_Note_Ntml_Source)
        self.stackedWidget.addWidget(self.note)
        self.table_of_contents_note = QtWidgets.QWidget()
        self.table_of_contents_note.setObjectName("table_of_contents_note")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.table_of_contents_note)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setSpacing(0)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.frameSearchInNote_2 = QtWidgets.QFrame(self.table_of_contents_note)
        self.frameSearchInNote_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameSearchInNote_2.setFrameShadow(QtWidgets.QFrame.Plain)
        self.frameSearchInNote_2.setObjectName("frameSearchInNote_2")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.frameSearchInNote_2)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.label_9 = QtWidgets.QLabel(self.frameSearchInNote_2)
        self.label_9.setMaximumSize(QtCore.QSize(32, 32))
        self.label_9.setText("")
        self.label_9.setPixmap(QtGui.QPixmap(":/newPrefix/icons/list41-2.svg"))
        self.label_9.setScaledContents(True)
        self.label_9.setObjectName("label_9")
        self.horizontalLayout_4.addWidget(self.label_9)
        self.label_5 = QtWidgets.QLabel(self.frameSearchInNote_2)
        font = QtGui.QFont()
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.label_5.setFont(font)
        self.label_5.setObjectName("label_5")
        self.horizontalLayout_4.addWidget(self.label_5)
        spacerItem7 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem7)
        self.verticalLayout_7.addWidget(self.frameSearchInNote_2)
        self.textBrowser_NoteContents = QtWidgets.QTextBrowser(self.table_of_contents_note)
        self.textBrowser_NoteContents.setObjectName("textBrowser_NoteContents")
        self.verticalLayout_7.addWidget(self.textBrowser_NoteContents)
        self.stackedWidget.addWidget(self.table_of_contents_note)
        self.horizontalLayout_5.addWidget(self.stackedWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1017, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuSelect_theme_for_UI = QtWidgets.QMenu(self.menuView)
        self.menuSelect_theme_for_UI.setObjectName("menuSelect_theme_for_UI")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        self.menuGo_to = QtWidgets.QMenu(self.menubar)
        self.menuGo_to.setObjectName("menuGo_to")
        self.menuHistory = QtWidgets.QMenu(self.menubar)
        self.menuHistory.setObjectName("menuHistory")
        self.menuFormat = QtWidgets.QMenu(self.menubar)
        self.menuFormat.setObjectName("menuFormat")
        self.menuContent_cur_note = QtWidgets.QMenu(self.menubar)
        self.menuContent_cur_note.setObjectName("menuContent_cur_note")
        self.menuDevelop = QtWidgets.QMenu(self.menubar)
        self.menuDevelop.setObjectName("menuDevelop")
        self.menuNotelist = QtWidgets.QMenu(self.menubar)
        self.menuNotelist.setObjectName("menuNotelist")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.dockHistory = QtWidgets.QDockWidget(MainWindow)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dockHistory.sizePolicy().hasHeightForWidth())
        self.dockHistory.setSizePolicy(sizePolicy)
        self.dockHistory.setMinimumSize(QtCore.QSize(161, 266))
        palette = QtGui.QPalette()
        brush = QtGui.QBrush(QtGui.QColor(180, 180, 180))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Active, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(180, 180, 180))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Inactive, QtGui.QPalette.WindowText, brush)
        brush = QtGui.QBrush(QtGui.QColor(143, 146, 147))
        brush.setStyle(QtCore.Qt.SolidPattern)
        palette.setBrush(QtGui.QPalette.Disabled, QtGui.QPalette.WindowText, brush)
        self.dockHistory.setPalette(palette)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.dockHistory.setFont(font)
        self.dockHistory.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.dockHistory.setObjectName("dockHistory")
        self.dockWidgetContents = QtWidgets.QWidget()
        self.dockWidgetContents.setObjectName("dockWidgetContents")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.dockWidgetContents)
        self.verticalLayout.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout.setObjectName("verticalLayout")
        self.textBrowser_History = QtWidgets.QTextBrowser(self.dockWidgetContents)
        self.textBrowser_History.setAutoFillBackground(False)
        self.textBrowser_History.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textBrowser_History.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_History.setMidLineWidth(0)
        self.textBrowser_History.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.textBrowser_History.setReadOnly(True)
        self.textBrowser_History.setOpenExternalLinks(False)
        self.textBrowser_History.setOpenLinks(False)
        self.textBrowser_History.setObjectName("textBrowser_History")
        self.verticalLayout.addWidget(self.textBrowser_History)
        self.dockHistory.setWidget(self.dockWidgetContents)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockHistory)
        self.toolBar = QtWidgets.QToolBar(MainWindow)
        self.toolBar.setObjectName("toolBar")
        MainWindow.addToolBar(QtCore.Qt.TopToolBarArea, self.toolBar)
        self.dockNoteContentTable = QtWidgets.QDockWidget(MainWindow)
        self.dockNoteContentTable.setAllowedAreas(QtCore.Qt.LeftDockWidgetArea|QtCore.Qt.RightDockWidgetArea)
        self.dockNoteContentTable.setObjectName("dockNoteContentTable")
        self.dockWidgetContents_2 = QtWidgets.QWidget()
        self.dockWidgetContents_2.setObjectName("dockWidgetContents_2")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.dockWidgetContents_2)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.frame = QtWidgets.QFrame(self.dockWidgetContents_2)
        self.frame.setMinimumSize(QtCore.QSize(30, 30))
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout_2.addWidget(self.frame)
        self.textBrowser_History_2 = QtWidgets.QTextBrowser(self.dockWidgetContents_2)
        self.textBrowser_History_2.setAutoFillBackground(False)
        self.textBrowser_History_2.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.textBrowser_History_2.setFrameShadow(QtWidgets.QFrame.Sunken)
        self.textBrowser_History_2.setMidLineWidth(0)
        self.textBrowser_History_2.setLineWrapMode(QtWidgets.QTextEdit.NoWrap)
        self.textBrowser_History_2.setOpenExternalLinks(False)
        self.textBrowser_History_2.setOpenLinks(False)
        self.textBrowser_History_2.setObjectName("textBrowser_History_2")
        self.verticalLayout_2.addWidget(self.textBrowser_History_2)
        self.dockNoteContentTable.setWidget(self.dockWidgetContents_2)
        MainWindow.addDockWidget(QtCore.Qt.DockWidgetArea(1), self.dockNoteContentTable)
        self.actionOpen = QtWidgets.QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionManual = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/newPrefix/icons/information3.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionManual.setIcon(icon1)
        self.actionManual.setObjectName("actionManual")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionCalculator = QtWidgets.QAction(MainWindow)
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap(":/newPrefix/icons/calculator36.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCalculator.setIcon(icon2)
        self.actionCalculator.setObjectName("actionCalculator")
        self.actionClose = QtWidgets.QAction(MainWindow)
        self.actionClose.setObjectName("actionClose")
        self.actionReopen_note = QtWidgets.QAction(MainWindow)
        self.actionReopen_note.setObjectName("actionReopen_note")
        self.actionForward_on_history = QtWidgets.QAction(MainWindow)
        self.actionForward_on_history.setObjectName("actionForward_on_history")
        self.actionBackward_on_history = QtWidgets.QAction(MainWindow)
        self.actionBackward_on_history.setObjectName("actionBackward_on_history")
        self.actionFast_jump_to_file_or_section = QtWidgets.QAction(MainWindow)
        self.actionFast_jump_to_file_or_section.setCheckable(True)
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap(":/newPrefix/icons/document7-4.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFast_jump_to_file_or_section.setIcon(icon3)
        self.actionFast_jump_to_file_or_section.setObjectName("actionFast_jump_to_file_or_section")
        self.actionShowHistoryWindow = QtWidgets.QAction(MainWindow)
        self.actionShowHistoryWindow.setCheckable(True)
        self.actionShowHistoryWindow.setEnabled(True)
        self.actionShowHistoryWindow.setObjectName("actionShowHistoryWindow")
        self.actionPreferences = QtWidgets.QAction(MainWindow)
        icon4 = QtGui.QIcon()
        icon4.addPixmap(QtGui.QPixmap(":/newPrefix/icons/settings1.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPreferences.setIcon(icon4)
        self.actionPreferences.setObjectName("actionPreferences")
        self.actionLock_UI = QtWidgets.QAction(MainWindow)
        self.actionLock_UI.setCheckable(True)
        icon5 = QtGui.QIcon()
        icon5.addPixmap(QtGui.QPixmap(":/newPrefix/icons/secured2.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionLock_UI.setIcon(icon5)
        self.actionLock_UI.setObjectName("actionLock_UI")
        self.actionShow_hide_toolbar = QtWidgets.QAction(MainWindow)
        self.actionShow_hide_toolbar.setObjectName("actionShow_hide_toolbar")
        self.actionShow_note_HTML_source = QtWidgets.QAction(MainWindow)
        self.actionShow_note_HTML_source.setCheckable(True)
        self.actionShow_note_HTML_source.setObjectName("actionShow_note_HTML_source")
        self.actionAdd_Link = QtWidgets.QAction(MainWindow)
        icon6 = QtGui.QIcon()
        icon6.addPixmap(QtGui.QPixmap(":/newPrefix/icons/link15.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAdd_Link.setIcon(icon6)
        self.actionAdd_Link.setObjectName("actionAdd_Link")
        self.actionAdd_Image = QtWidgets.QAction(MainWindow)
        icon7 = QtGui.QIcon()
        icon7.addPixmap(QtGui.QPixmap(":/newPrefix/icons/image42.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAdd_Image.setIcon(icon7)
        self.actionAdd_Image.setObjectName("actionAdd_Image")
        self.actionBold = QtWidgets.QAction(MainWindow)
        self.actionBold.setCheckable(True)
        icon8 = QtGui.QIcon()
        icon8.addPixmap(QtGui.QPixmap(":/newPrefix/icons/bold14.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBold.setIcon(icon8)
        self.actionBold.setObjectName("actionBold")
        self.actionItalic = QtWidgets.QAction(MainWindow)
        self.actionItalic.setCheckable(True)
        icon9 = QtGui.QIcon()
        icon9.addPixmap(QtGui.QPixmap(":/newPrefix/icons/italics.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionItalic.setIcon(icon9)
        self.actionItalic.setObjectName("actionItalic")
        self.actionStrikethrough = QtWidgets.QAction(MainWindow)
        self.actionStrikethrough.setCheckable(True)
        icon10 = QtGui.QIcon()
        icon10.addPixmap(QtGui.QPixmap(":/newPrefix/icons/strikethrough1.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionStrikethrough.setIcon(icon10)
        self.actionStrikethrough.setObjectName("actionStrikethrough")
        self.actionMark = QtWidgets.QAction(MainWindow)
        self.actionMark.setCheckable(True)
        icon11 = QtGui.QIcon()
        icon11.addPixmap(QtGui.QPixmap(":/newPrefix/icons/border.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMark.setIcon(icon11)
        self.actionMark.setObjectName("actionMark")
        self.actionAdd_new_note = QtWidgets.QAction(MainWindow)
        icon12 = QtGui.QIcon()
        icon12.addPixmap(QtGui.QPixmap(":/newPrefix/icons/add29.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionAdd_new_note.setIcon(icon12)
        self.actionAdd_new_note.setObjectName("actionAdd_new_note")
        self.actionRemove_this_note = QtWidgets.QAction(MainWindow)
        icon13 = QtGui.QIcon()
        icon13.addPixmap(QtGui.QPixmap(":/newPrefix/icons/minus10.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRemove_this_note.setIcon(icon13)
        self.actionRemove_this_note.setObjectName("actionRemove_this_note")
        self.actionBullet_List = QtWidgets.QAction(MainWindow)
        self.actionBullet_List.setCheckable(True)
        icon14 = QtGui.QIcon()
        icon14.addPixmap(QtGui.QPixmap(":/newPrefix/icons/list36.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionBullet_List.setIcon(icon14)
        self.actionBullet_List.setObjectName("actionBullet_List")
        self.actionNumber_List = QtWidgets.QAction(MainWindow)
        self.actionNumber_List.setCheckable(True)
        icon15 = QtGui.QIcon()
        icon15.addPixmap(QtGui.QPixmap(":/newPrefix/icons/numbered5.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNumber_List.setIcon(icon15)
        self.actionNumber_List.setObjectName("actionNumber_List")
        self.actionHeading_1 = QtWidgets.QAction(MainWindow)
        self.actionHeading_1.setCheckable(True)
        icon16 = QtGui.QIcon()
        icon16.addPixmap(QtGui.QPixmap(":/newPrefix/icons/icon_h1.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHeading_1.setIcon(icon16)
        self.actionHeading_1.setObjectName("actionHeading_1")
        self.actionHeading_2 = QtWidgets.QAction(MainWindow)
        self.actionHeading_2.setCheckable(True)
        icon17 = QtGui.QIcon()
        icon17.addPixmap(QtGui.QPixmap(":/newPrefix/icons/icon_h2.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHeading_2.setIcon(icon17)
        self.actionHeading_2.setObjectName("actionHeading_2")
        self.actionHeading_3 = QtWidgets.QAction(MainWindow)
        self.actionHeading_3.setCheckable(True)
        icon18 = QtGui.QIcon()
        icon18.addPixmap(QtGui.QPixmap(":/newPrefix/icons/icon_h3.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHeading_3.setIcon(icon18)
        self.actionHeading_3.setObjectName("actionHeading_3")
        self.actionHeading_4 = QtWidgets.QAction(MainWindow)
        self.actionHeading_4.setCheckable(True)
        icon19 = QtGui.QIcon()
        icon19.addPixmap(QtGui.QPixmap(":/newPrefix/icons/icon_h4.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHeading_4.setIcon(icon19)
        self.actionHeading_4.setObjectName("actionHeading_4")
        self.actionHeading_5 = QtWidgets.QAction(MainWindow)
        self.actionHeading_5.setCheckable(True)
        icon20 = QtGui.QIcon()
        icon20.addPixmap(QtGui.QPixmap(":/newPrefix/icons/icon_h5.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHeading_5.setIcon(icon20)
        self.actionHeading_5.setObjectName("actionHeading_5")
        self.actionHeading_6 = QtWidgets.QAction(MainWindow)
        self.actionHeading_6.setCheckable(True)
        icon21 = QtGui.QIcon()
        icon21.addPixmap(QtGui.QPixmap(":/newPrefix/icons/icon_h6.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionHeading_6.setIcon(icon21)
        self.actionHeading_6.setObjectName("actionHeading_6")
        self.actionUndo = QtWidgets.QAction(MainWindow)
        icon22 = QtGui.QIcon()
        icon22.addPixmap(QtGui.QPixmap(":/newPrefix/icons/undo1.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionUndo.setIcon(icon22)
        self.actionUndo.setObjectName("actionUndo")
        self.actionRedo = QtWidgets.QAction(MainWindow)
        icon23 = QtGui.QIcon()
        icon23.addPixmap(QtGui.QPixmap(":/newPrefix/icons/interface3.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionRedo.setIcon(icon23)
        self.actionRedo.setObjectName("actionRedo")
        self.actionHistoryClear = QtWidgets.QAction(MainWindow)
        self.actionHistoryClear.setObjectName("actionHistoryClear")
        self.actionHistory_preferences = QtWidgets.QAction(MainWindow)
        self.actionHistory_preferences.setObjectName("actionHistory_preferences")
        self.actionQuit_from_programm = QtWidgets.QAction(MainWindow)
        self.actionQuit_from_programm.setObjectName("actionQuit_from_programm")
        self.actionPrevious_note = QtWidgets.QAction(MainWindow)
        self.actionPrevious_note.setObjectName("actionPrevious_note")
        self.actionNext_note = QtWidgets.QAction(MainWindow)
        self.actionNext_note.setObjectName("actionNext_note")
        self.actionFind_in_current_note = QtWidgets.QAction(MainWindow)
        icon24 = QtGui.QIcon()
        icon24.addPixmap(QtGui.QPixmap(":/newPrefix/icons/dark37.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionFind_in_current_note.setIcon(icon24)
        self.actionFind_in_current_note.setObjectName("actionFind_in_current_note")
        self.actionFind_next_in_cur_note = QtWidgets.QAction(MainWindow)
        self.actionFind_next_in_cur_note.setObjectName("actionFind_next_in_cur_note")
        self.actionDefault_theme = QtWidgets.QAction(MainWindow)
        self.actionDefault_theme.setCheckable(True)
        self.actionDefault_theme.setObjectName("actionDefault_theme")
        self.actionShow_all_themes_with_demo = QtWidgets.QAction(MainWindow)
        self.actionShow_all_themes_with_demo.setObjectName("actionShow_all_themes_with_demo")
        self.actionShow_content_collapse_all_H = QtWidgets.QAction(MainWindow)
        self.actionShow_content_collapse_all_H.setObjectName("actionShow_content_collapse_all_H")
        self.actionCollapse_all_H_exclude_cur = QtWidgets.QAction(MainWindow)
        self.actionCollapse_all_H_exclude_cur.setObjectName("actionCollapse_all_H_exclude_cur")
        self.actionCollapse_cur_H = QtWidgets.QAction(MainWindow)
        self.actionCollapse_cur_H.setObjectName("actionCollapse_cur_H")
        self.actionExpand_all_H = QtWidgets.QAction(MainWindow)
        self.actionExpand_all_H.setObjectName("actionExpand_all_H")
        self.actionSave_note = QtWidgets.QAction(MainWindow)
        icon25 = QtGui.QIcon()
        icon25.addPixmap(QtGui.QPixmap(":/newPrefix/icons/save8.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionSave_note.setIcon(icon25)
        self.actionSave_note.setObjectName("actionSave_note")
        self.actionNote_multiaction = QtWidgets.QAction(MainWindow)
        icon26 = QtGui.QIcon()
        icon26.addPixmap(QtGui.QPixmap(":/newPrefix/icons/document62-2.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionNote_multiaction.setIcon(icon26)
        self.actionNote_multiaction.setObjectName("actionNote_multiaction")
        self.actionSave_also_note_HTML_source = QtWidgets.QAction(MainWindow)
        self.actionSave_also_note_HTML_source.setCheckable(True)
        self.actionSave_also_note_HTML_source.setObjectName("actionSave_also_note_HTML_source")
        self.action_ClearFormat = QtWidgets.QAction(MainWindow)
        icon27 = QtGui.QIcon()
        icon27.addPixmap(QtGui.QPixmap(":/newPrefix/icons/eraser.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.action_ClearFormat.setIcon(icon27)
        self.action_ClearFormat.setObjectName("action_ClearFormat")
        self.actionCode = QtWidgets.QAction(MainWindow)
        self.actionCode.setCheckable(True)
        icon28 = QtGui.QIcon()
        icon28.addPixmap(QtGui.QPixmap(":/newPrefix/icons/embed.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCode.setIcon(icon28)
        self.actionCode.setObjectName("actionCode")
        self.actionShow_note_contents = QtWidgets.QAction(MainWindow)
        self.actionShow_note_contents.setCheckable(True)
        icon29 = QtGui.QIcon()
        icon29.addPixmap(QtGui.QPixmap(":/newPrefix/icons/list41-2.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionShow_note_contents.setIcon(icon29)
        self.actionShow_note_contents.setObjectName("actionShow_note_contents")
        self.actionCopy = QtWidgets.QAction(MainWindow)
        icon30 = QtGui.QIcon()
        icon30.addPixmap(QtGui.QPixmap(":/newPrefix/icons/copy12.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCopy.setIcon(icon30)
        self.actionCopy.setObjectName("actionCopy")
        self.actionPaste = QtWidgets.QAction(MainWindow)
        icon31 = QtGui.QIcon()
        icon31.addPixmap(QtGui.QPixmap(":/newPrefix/icons/clipboard46.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionPaste.setIcon(icon31)
        self.actionPaste.setObjectName("actionPaste")
        self.actionCut = QtWidgets.QAction(MainWindow)
        icon32 = QtGui.QIcon()
        icon32.addPixmap(QtGui.QPixmap(":/newPrefix/icons/cut18.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionCut.setIcon(icon32)
        self.actionCut.setObjectName("actionCut")
        self.actionPaste_as_text = QtWidgets.QAction(MainWindow)
        self.actionPaste_as_text.setObjectName("actionPaste_as_text")
        self.actionSort_by_name = QtWidgets.QAction(MainWindow)
        self.actionSort_by_name.setObjectName("actionSort_by_name")
        self.actionSort_by_size = QtWidgets.QAction(MainWindow)
        self.actionSort_by_size.setObjectName("actionSort_by_size")
        self.actionSort_by_reopen_count = QtWidgets.QAction(MainWindow)
        self.actionSort_by_reopen_count.setObjectName("actionSort_by_reopen_count")
        self.actionSort_by_last_edit = QtWidgets.QAction(MainWindow)
        self.actionSort_by_last_edit.setObjectName("actionSort_by_last_edit")
        self.actionExport_this_note = QtWidgets.QAction(MainWindow)
        icon33 = QtGui.QIcon()
        icon33.addPixmap(QtGui.QPixmap(":/newPrefix/icons/export.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionExport_this_note.setIcon(icon33)
        self.actionExport_this_note.setObjectName("actionExport_this_note")
        self.actionMove_this_note = QtWidgets.QAction(MainWindow)
        icon34 = QtGui.QIcon()
        icon34.addPixmap(QtGui.QPixmap(":/newPrefix/icons/move6.svg"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionMove_this_note.setIcon(icon34)
        self.actionMove_this_note.setObjectName("actionMove_this_note")
        self.actionShow_List_of_contents = QtWidgets.QAction(MainWindow)
        self.actionShow_List_of_contents.setCheckable(True)
        self.actionShow_List_of_contents.setEnabled(True)
        self.actionShow_List_of_contents.setObjectName("actionShow_List_of_contents")
        self.actionSelect_dir_and_run_test_open_save_notes = QtWidgets.QAction(MainWindow)
        self.actionSelect_dir_and_run_test_open_save_notes.setObjectName("actionSelect_dir_and_run_test_open_save_notes")
        self.menuFile.addAction(self.actionAdd_new_note)
        self.menuFile.addAction(self.actionRemove_this_note)
        self.menuFile.addAction(self.actionNote_multiaction)
        self.menuFile.addAction(self.actionSave_note)
        self.menuFile.addAction(self.actionReopen_note)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionOpen)
        self.menuFile.addAction(self.actionClose)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionQuit_from_programm)
        self.menuSelect_theme_for_UI.addAction(self.actionDefault_theme)
        self.menuSelect_theme_for_UI.addSeparator()
        self.menuSelect_theme_for_UI.addAction(self.actionShow_all_themes_with_demo)
        self.menuView.addAction(self.actionShowHistoryWindow)
        self.menuView.addAction(self.actionShow_List_of_contents)
        self.menuView.addAction(self.actionShow_hide_toolbar)
        self.menuView.addSeparator()
        self.menuView.addAction(self.menuSelect_theme_for_UI.menuAction())
        self.menuView.addSeparator()
        self.menuEdit.addAction(self.actionUndo)
        self.menuEdit.addAction(self.actionRedo)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionCopy)
        self.menuEdit.addAction(self.actionCut)
        self.menuEdit.addAction(self.actionPaste)
        self.menuEdit.addAction(self.actionPaste_as_text)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionLock_UI)
        self.menuEdit.addAction(self.actionAdd_Link)
        self.menuEdit.addAction(self.actionAdd_Image)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionPreferences)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionFind_in_current_note)
        self.menuEdit.addAction(self.actionFind_next_in_cur_note)
        self.menuHelp.addAction(self.actionManual)
        self.menuHelp.addAction(self.actionAbout)
        self.menuTools.addAction(self.actionCalculator)
        self.menuGo_to.addAction(self.actionForward_on_history)
        self.menuGo_to.addAction(self.actionBackward_on_history)
        self.menuGo_to.addAction(self.actionFast_jump_to_file_or_section)
        self.menuGo_to.addAction(self.actionPrevious_note)
        self.menuGo_to.addAction(self.actionNext_note)
        self.menuHistory.addAction(self.actionHistoryClear)
        self.menuHistory.addAction(self.actionHistory_preferences)
        self.menuFormat.addAction(self.actionBold)
        self.menuFormat.addAction(self.actionItalic)
        self.menuFormat.addAction(self.actionStrikethrough)
        self.menuFormat.addAction(self.actionMark)
        self.menuFormat.addAction(self.actionCode)
        self.menuFormat.addAction(self.actionBullet_List)
        self.menuFormat.addAction(self.actionNumber_List)
        self.menuFormat.addAction(self.actionHeading_1)
        self.menuFormat.addAction(self.actionHeading_2)
        self.menuFormat.addAction(self.actionHeading_3)
        self.menuFormat.addAction(self.actionHeading_4)
        self.menuFormat.addAction(self.actionHeading_5)
        self.menuFormat.addAction(self.actionHeading_6)
        self.menuFormat.addSeparator()
        self.menuFormat.addAction(self.action_ClearFormat)
        self.menuContent_cur_note.addAction(self.actionShow_note_contents)
        self.menuContent_cur_note.addAction(self.actionShow_content_collapse_all_H)
        self.menuContent_cur_note.addAction(self.actionCollapse_all_H_exclude_cur)
        self.menuContent_cur_note.addAction(self.actionCollapse_cur_H)
        self.menuContent_cur_note.addAction(self.actionExpand_all_H)
        self.menuDevelop.addSeparator()
        self.menuDevelop.addAction(self.actionShow_note_HTML_source)
        self.menuDevelop.addAction(self.actionSave_also_note_HTML_source)
        self.menuDevelop.addAction(self.actionSelect_dir_and_run_test_open_save_notes)
        self.menuNotelist.addAction(self.actionSort_by_name)
        self.menuNotelist.addAction(self.actionSort_by_size)
        self.menuNotelist.addAction(self.actionSort_by_reopen_count)
        self.menuNotelist.addAction(self.actionSort_by_last_edit)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuHistory.menuAction())
        self.menubar.addAction(self.menuNotelist.menuAction())
        self.menubar.addAction(self.menuFormat.menuAction())
        self.menubar.addAction(self.menuContent_cur_note.menuAction())
        self.menubar.addAction(self.menuGo_to.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menubar.addAction(self.menuDevelop.menuAction())
        self.toolBar.addAction(self.actionFast_jump_to_file_or_section)
        self.toolBar.addAction(self.actionAdd_new_note)
        self.toolBar.addAction(self.actionRemove_this_note)
        self.toolBar.addAction(self.actionMove_this_note)
        self.toolBar.addAction(self.actionShow_note_contents)
        self.toolBar.addAction(self.actionExport_this_note)
        self.toolBar.addAction(self.actionNote_multiaction)
        self.toolBar.addSeparator()
        self.toolBar.addAction(self.actionCalculator)
        self.toolBar.addAction(self.actionPreferences)
        self.toolBar.addAction(self.actionLock_UI)
        self.toolBar.addAction(self.actionManual)

        self.retranslateUi(MainWindow)
        self.stackedWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Relanotes"))
        self.label_2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:13pt; color:#008066;\">Live search in your notes:  </span></p></body></html>"))
        self.labelNotelistFilterTip.setText(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8pt; font-weight:400; font-style:normal;\">\n"
"<p style=\" margin-top:12px; margin-bottom:12px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\">First word - Name, second - Text. Use \'Space\' in begin to search included text.</p></body></html>"))
        self.label_DisplayFilters.setText(_translate("MainWindow", "<html><head/><body><p>Example: <span style=\" font-weight:600;\">proj ninja</span></p></body></html>"))
        self.label_6.setText(_translate("MainWindow", "       Include text"))
        self.label_3.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:11pt; color:#008066;\">Search in your note:</span></p></body></html>"))
        self.label_5.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-size:13pt; color:#008066;\">Table of contents note</span></p></body></html>"))
        self.menuFile.setTitle(_translate("MainWindow", "&Notes"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuSelect_theme_for_UI.setTitle(_translate("MainWindow", "Select theme &for UI"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuHelp.setTitle(_translate("MainWindow", "He&lp"))
        self.menuTools.setTitle(_translate("MainWindow", "&Tools"))
        self.menuGo_to.setTitle(_translate("MainWindow", "&Go to"))
        self.menuHistory.setTitle(_translate("MainWindow", "History"))
        self.menuFormat.setTitle(_translate("MainWindow", "Format"))
        self.menuContent_cur_note.setTitle(_translate("MainWindow", "&Content of cur.note"))
        self.menuDevelop.setTitle(_translate("MainWindow", "&Develop"))
        self.menuNotelist.setTitle(_translate("MainWindow", "Notelist"))
        self.dockHistory.setWindowTitle(_translate("MainWindow", " Smart histor&y"))
        self.toolBar.setWindowTitle(_translate("MainWindow", "toolBar"))
        self.dockNoteContentTable.setWindowTitle(_translate("MainWindow", "Note content table"))
        self.actionOpen.setText(_translate("MainWindow", "&Open notebook"))
        self.actionOpen.setShortcut(_translate("MainWindow", "Ctrl+O"))
        self.actionManual.setText(_translate("MainWindow", "&Manual"))
        self.actionManual.setShortcut(_translate("MainWindow", "F1"))
        self.actionAbout.setText(_translate("MainWindow", "&About"))
        self.actionCalculator.setText(_translate("MainWindow", "&RelaCalc"))
        self.actionCalculator.setToolTip(_translate("MainWindow", "\"Live\" calculator"))
        self.actionCalculator.setShortcut(_translate("MainWindow", "Ctrl+Alt+C"))
        self.actionClose.setText(_translate("MainWindow", "&Close notebook"))
        self.actionReopen_note.setText(_translate("MainWindow", "R&eopen note"))
        self.actionReopen_note.setToolTip(_translate("MainWindow", "Reopen note"))
        self.actionReopen_note.setShortcut(_translate("MainWindow", "Ctrl+R"))
        self.actionForward_on_history.setText(_translate("MainWindow", "&Forward on history"))
        self.actionForward_on_history.setShortcut(_translate("MainWindow", "Alt+Right"))
        self.actionBackward_on_history.setText(_translate("MainWindow", "&Backward on history"))
        self.actionBackward_on_history.setShortcut(_translate("MainWindow", "Alt+Left"))
        self.actionFast_jump_to_file_or_section.setText(_translate("MainWindow", "Fast &jump to file or section"))
        self.actionFast_jump_to_file_or_section.setShortcut(_translate("MainWindow", "Ctrl+J"))
        self.actionShowHistoryWindow.setText(_translate("MainWindow", "&Show History window"))
        self.actionPreferences.setText(_translate("MainWindow", "Pr&eferences"))
        self.actionLock_UI.setText(_translate("MainWindow", "&Lock Editor UI"))
        self.actionLock_UI.setShortcut(_translate("MainWindow", "Ctrl+Shift+L"))
        self.actionShow_hide_toolbar.setText(_translate("MainWindow", "Show / &hide toolbar"))
        self.actionShow_note_HTML_source.setText(_translate("MainWindow", "&Show note HTML source"))
        self.actionAdd_Link.setText(_translate("MainWindow", "&Add Link"))
        self.actionAdd_Image.setText(_translate("MainWindow", "Add &Image"))
        self.actionBold.setText(_translate("MainWindow", "&Bold"))
        self.actionBold.setShortcut(_translate("MainWindow", "Ctrl+B"))
        self.actionItalic.setText(_translate("MainWindow", "&Italic"))
        self.actionItalic.setShortcut(_translate("MainWindow", "Ctrl+I"))
        self.actionStrikethrough.setText(_translate("MainWindow", "&Strikethrough"))
        self.actionStrikethrough.setShortcut(_translate("MainWindow", "Ctrl+K"))
        self.actionMark.setText(_translate("MainWindow", "&Mark"))
        self.actionMark.setToolTip(_translate("MainWindow", "Mark"))
        self.actionMark.setShortcut(_translate("MainWindow", "Ctrl+U"))
        self.actionAdd_new_note.setText(_translate("MainWindow", "&Add new note"))
        self.actionRemove_this_note.setText(_translate("MainWindow", "&Remove this note"))
        self.actionBullet_List.setText(_translate("MainWindow", "Bullet &List"))
        self.actionNumber_List.setText(_translate("MainWindow", "&Number List"))
        self.actionHeading_1.setText(_translate("MainWindow", "&Heading 1"))
        self.actionHeading_1.setShortcut(_translate("MainWindow", "Ctrl+1"))
        self.actionHeading_2.setText(_translate("MainWindow", "Heading &2"))
        self.actionHeading_2.setShortcut(_translate("MainWindow", "Ctrl+2"))
        self.actionHeading_3.setText(_translate("MainWindow", "Heading &3"))
        self.actionHeading_3.setShortcut(_translate("MainWindow", "Ctrl+3"))
        self.actionHeading_4.setText(_translate("MainWindow", "Heading &4"))
        self.actionHeading_4.setShortcut(_translate("MainWindow", "Ctrl+4"))
        self.actionHeading_5.setText(_translate("MainWindow", "Heading &5"))
        self.actionHeading_5.setShortcut(_translate("MainWindow", "Ctrl+5"))
        self.actionHeading_6.setText(_translate("MainWindow", "Heading &6"))
        self.actionHeading_6.setShortcut(_translate("MainWindow", "Ctrl+6"))
        self.actionUndo.setText(_translate("MainWindow", "&Undo"))
        self.actionUndo.setShortcut(_translate("MainWindow", "Ctrl+Z"))
        self.actionRedo.setText(_translate("MainWindow", "&Redo"))
        self.actionRedo.setShortcut(_translate("MainWindow", "Ctrl+Shift+Z"))
        self.actionHistoryClear.setText(_translate("MainWindow", "&Clear"))
        self.actionHistory_preferences.setText(_translate("MainWindow", "&History preferences"))
        self.actionQuit_from_programm.setText(_translate("MainWindow", "&Quit from programm"))
        self.actionPrevious_note.setText(_translate("MainWindow", "&Previous note in history"))
        self.actionPrevious_note.setShortcut(_translate("MainWindow", "Ctrl+PgUp"))
        self.actionNext_note.setText(_translate("MainWindow", "&Next note in history"))
        self.actionNext_note.setShortcut(_translate("MainWindow", "Ctrl+PgDown"))
        self.actionFind_in_current_note.setText(_translate("MainWindow", "&Find in current note"))
        self.actionFind_in_current_note.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionFind_next_in_cur_note.setText(_translate("MainWindow", "Find &next in cur.note"))
        self.actionFind_next_in_cur_note.setShortcut(_translate("MainWindow", "F3"))
        self.actionDefault_theme.setText(_translate("MainWindow", "&Default theme"))
        self.actionShow_all_themes_with_demo.setText(_translate("MainWindow", "&Show all themes with demo"))
        self.actionShow_content_collapse_all_H.setText(_translate("MainWindow", "Sh&ow content (collapse all H.)"))
        self.actionCollapse_all_H_exclude_cur.setText(_translate("MainWindow", "&Collapse all H. exclude cur."))
        self.actionCollapse_cur_H.setText(_translate("MainWindow", "Collapse cur.&H"))
        self.actionExpand_all_H.setText(_translate("MainWindow", "&Expand all H."))
        self.actionSave_note.setText(_translate("MainWindow", "&Save note"))
        self.actionSave_note.setShortcut(_translate("MainWindow", "Ctrl+S"))
        self.actionNote_multiaction.setText(_translate("MainWindow", "&Note multiaction"))
        self.actionNote_multiaction.setShortcut(_translate("MainWindow", "Ctrl+Shift+A"))
        self.actionSave_also_note_HTML_source.setText(_translate("MainWindow", "Save also &note HTML source"))
        self.action_ClearFormat.setText(_translate("MainWindow", "Clear &format"))
        self.action_ClearFormat.setShortcut(_translate("MainWindow", "Ctrl+0"))
        self.actionCode.setText(_translate("MainWindow", "&Code"))
        self.actionCode.setShortcut(_translate("MainWindow", "Ctrl+T"))
        self.actionShow_note_contents.setText(_translate("MainWindow", "&Show note contents"))
        self.actionShow_note_contents.setShortcut(_translate("MainWindow", "Ctrl+Shift+C"))
        self.actionCopy.setText(_translate("MainWindow", "&Copy"))
        self.actionCopy.setShortcut(_translate("MainWindow", "Ctrl+C"))
        self.actionPaste.setText(_translate("MainWindow", "&Paste"))
        self.actionPaste.setShortcut(_translate("MainWindow", "Ctrl+V"))
        self.actionCut.setText(_translate("MainWindow", "Cut"))
        self.actionCut.setShortcut(_translate("MainWindow", "Ctrl+X"))
        self.actionPaste_as_text.setText(_translate("MainWindow", "Paste as te&xt"))
        self.actionPaste_as_text.setShortcut(_translate("MainWindow", "Ctrl+Shift+V"))
        self.actionSort_by_name.setText(_translate("MainWindow", "&Sort by name"))
        self.actionSort_by_size.setText(_translate("MainWindow", "Sort &by size"))
        self.actionSort_by_reopen_count.setText(_translate("MainWindow", "Sort by &reopen count"))
        self.actionSort_by_last_edit.setText(_translate("MainWindow", "Sort by &last edit"))
        self.actionExport_this_note.setText(_translate("MainWindow", "Export this note"))
        self.actionExport_this_note.setToolTip(_translate("MainWindow", "Export this note"))
        self.actionMove_this_note.setText(_translate("MainWindow", "Move this note"))
        self.actionMove_this_note.setToolTip(_translate("MainWindow", "Move this note"))
        self.actionShow_List_of_contents.setText(_translate("MainWindow", "Show hide &Note content table window"))
        self.actionSelect_dir_and_run_test_open_save_notes.setText(_translate("MainWindow", "Select dir and run test \"open-save notes\""))

from resources import resources_rc
